---


# MULTIPLE CLASS

- 
  class:
    - Vote
    - Candidate
  type: method
  visibility: public
  name: countLinks
  static: false
  description: |
    Count number of linked election to this object.
  return: |
    (int) Number of linked elections.
  related:
    - 'Vote::countLinks'
    - 'Candidate::countLinks'
    - 'Vote::getLinks'
    - 'Candidate::getLinks'
    - 'Vote::haveLink'
    - 'Candidate::haveLink'
  publish: true

- 
  class:
    - Vote
    - Candidate
  type: method
  visibility: public
  name: getLinks
  static: false
  description: |
    Get elections object linked to this Vote or Candidate object.
  return: |
    (array) Populated by each elections Condorcet object.
  related:
    - 'Vote::countLinks'
    - 'Candidate::countLinks'
    - 'Vote::getLinks'
    - 'Candidate::getLinks'
    - 'Vote::haveLink'
    - 'Candidate::haveLink'
  publish: true

- 
  class:
    - Vote
    - Candidate
  type: method
  visibility: public
  name: haveLink
  static: false
  description: |
    Check if this election is linked with this Candidate/Vote object.
  input:
    election:
      type: object Condorcet\Condorcet
      required: true
      text: Condorcet election to check.
  return: |
    (bool) True or False.
  related:
  related:
    - 'Vote::countLinks'
    - 'Candidate::countLinks'
    - 'Vote::getLinks'
    - 'Candidate::getLinks'
    - 'Vote::haveLink'
    - 'Candidate::haveLink'

  publish: true


# CLASS CONDORCET


- 
  class: Condorcet
  type: method
  visibility: public
  name: __construct
  static: false
  description: |
    Build a new Election.
  input:
    method:
      type: string
      default: null
      required: false
      text: Change election default method. Parameter comfort and non-binding. Not recommended.
  return: |
    NULL
  related:
    - 'Condorcet::__destruct'
    - 'Condorcet::setMethod'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: addCandidate
  static: false
  description: |
    Add one Candidate to an election.
  input:
    candidate:
      type: mixed
      default: automatic
      required: false
      text: Alphanumeric string or Condorcet\Candidate objet. Your candidate name will be trim().
  return: |
    The new candidate name (your or automatic one). Throw an exception on error (existing candidate...).
  related:
    - 'Condorcet::parseCandidates'
    - 'Condorcet::jsonCandidates'
    - 'Condorcet::removeCandidate'
    - 'Condorcet::getCandidatesList'
    - 'Condorcet::canAddCandidate'
  examples:
    'Manual - Manage Candidate': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-A.-Create-an-Election-%23-2.-Create-Candidates'
  publish: true
- 
  class: Condorcet
  type: method
  visibility: public
  name: addVote
  static: false
  description: |
    Add a vote to an election.
  input:
    vote:
      type: mixed
      required: true
      text: 'String or array representation. Or Condorcet\Vote object. If you not provide yourself Vote object, a new one will be generate for you. '
    tags:
      type: mixed
      default: null
      required: false
      text: String separated by commas or an array. Will add tags to the vote object for you. But you can too add it yourself to Vote object.
  return: |
    The vote object.
  related:
    - 'Condorcet::parseVotes'
    - 'Condorcet::jsonVotes'
    - 'Condorcet::removeVote'
    - 'Condorcet::getVotesList'

  examples:
    'Manual - Vote Management': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-B.-Vote-management-%23-1.-Add-Vote'
  publish: true
- 
  class: Condorcet
  type: method
  visibility: public
  name: canAddCandidate
  static: false
  description: |
    Check if a Candidate is alredeay register. User strict Vote object comparaison, but also string namming comparaison into the election.
  input:
    candidate:
      type: mixed
      required: true
      text : String or Condorcet/Vote object.
  return: |
    True if your Candidate is available. or False.
  related:
    - 'Condorcet::addCandidate'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: countCandidates
  static: false
  description: |
    Count the number of registered candidate
  return: |
    (int) Number of registered candidate for this election.
  related:
    - 'Condorcet::getCandidatesList'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: countVotes
  static: false
  description: |
    Count the number of actual registered and valid vote for this election.
  input:
    tag:
      type: mixed
      default: null
      required: false
      text: 'Tag into string sparated by commas, or an Array.'
    with:
      type: bool
      default: true
      required: false
      text: Count Votes with this tag ou without this tag.
  return: |
    (int) Number of valid and registered vote into this election.
  related:
    - 'Condorcet::getVotesList'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: getCandidateObjectByName
  static: false
  description: |
    Find candidate object by his string and return the candidate object.
  input:
    candidate:
      type: string
      required: true
      text: Candidate name.
  return: |
    Candidate object (Condorcet\Candidate)
  related:
    - 'Condorcet::existCandidateId'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: getCandidatesList
  static: false
  description: |
    Return a list of registered Candidate into this election.
  input:
    stringMode:
      type: bool
      default: false
      required: false
      text: Convert Candidate objects into string with theirs name.
  return: |
    List of Candidate into an array.
  related:
    - 'Condorcet::countCandidates'
    - 'Condorcet::existCandidateId'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: getChecksum
  static: false
  description: |
    SHA-2 256 checksum of following internal data:        
    * Candidates
    * Votes list & tags
    * Computed data (pairwise, algorithm cache, stats)
    * Class version (major version like 0.14)    
    
    Can be powerfull to check integrity and security of an election. Or working with serialized object.

  return: |
    (string) SHA-2 256 bits Hexadecimal

  examples:
    'Manual - Cryptographic Checksum': 'https://github.com/julien-boudry/Condorcet/wiki/III-%23-A.-Avanced-features-%26-Configuration-%23-2.-Cryptographic-Checksum': 'https://github.com/julien-boudry/Condorcet/wiki/III-%23-A.-Avanced-features-%26-Configuration-%23-2.-Cryptographic-Checksum'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: getConfig
  static: false
  description: |
    Get some config summary for this object
  return: |
    An explicit array.
  related:
    - 'Condorcet::getMethod'
    - 'Condorcet::isAuthMethod'
    - 'Condorcet::getClassAuthMethods'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: getGlobalTimer
  static: false
  description: |
    Returns the cumulated computation runtime of this object. Include only computation related methods.
  input:
    floatNumber:
      type: bool
      default: false
      required: false
      text: 'If true, return float. else, a string with 5 decimals.'
  return: |
    Int or string (look param).
  related:
    - 'Condorcet::getLastTimer'

  examples:
    'Manual - Timber benchmarking': 'https://github.com/julien-boudry/Condorcet/wiki/III-%23-A.-Avanced-features-%26-Configuration-%23-1.-Timer-Benchmarking'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: getLastTimer
  static: false
  description: |
    Return the last computation runtime (typically after a getResult() call.). Include only computation related methods.
  input:
    floatNumber:
      type: bool
      default: false
      required: false
      text: 'If true, return float. else, a string with 5 decimals.'
  return: |
    Int or string (look param).
  related:
    - 'Condorcet::getGlobalTimer'

  examples:
    'Manual - Timber benchmarking': 'https://github.com/julien-boudry/Condorcet/wiki/III-%23-A.-Avanced-features-%26-Configuration-%23-1.-Timer-Benchmarking'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: getLoser
  static: false
  description: |
    Get the natural Condorcet loser if there is one. Alternatively you can get the loser(s) from an advanced Condorcet algorithm.
  input:
    method:
      type: mixed
      default: null
      required: false
      text: |
        *Only if not null :*

        The loser will be provided by an advanced algorithm of an available advanced Condorcet method. For most of them, it will be the same as the Condorcet Marquis there. But if it does not exist, it may be different; and in some cases they may be multiple.

        Set to True for use object default method. Set the string name of the algorithm for use an specific one.

        If null, Natural Condorcet algorithm will be use.
  return: |
    Candidate object given. Null if there are no available winner or loser.

    If you use an advanced method instead of Natural, you can get an array with multiples losers.

    Throw an exception on error.
  related:
    - 'Condorcet::getWinner'
    - 'Condorcet::getResult'

  examples:
    'Manual - Natural Condorcet': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-C.-Result-%23-1.-Natural-Condorcet'

  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: getMethod
  static: false
  description: |
    Get name of the default adavanced method for this Election.
  return: |
    (string) Name of the method
  related:
    - 'Condorcet::getMethod'
    - 'Condorcet::isAuthMethod'
    - 'Condorcet::getClassAuthMethods'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: getPairwise
  static: false
  description: |
    Return the Pairwise.
  input:
    explicit:
      type: bool
      default: true
      required: true
      text: Get the candidate string name.
  return: |
    Explicit array.
  related:
    - 'Condorcet::getResult'

  examples:
    'Manual - Advanced Results': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-C.-Result-%23-3.-Advanced-Results-Management'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: getResult
  static: false
  description: |
    Get a full ranking from an advanced Condorcet method.    
    *Have a look on the [supported method](https://github.com/julien-boudry/Condorcet/wiki/I-%23-Installation-%26-Basic-Configuration-%23-2.-Condorcet-Methods), or create [your own algorithm](https://github.com/julien-boudry/Condorcet/wiki/III-%23-C.-Extending-Condorcet-%23-1.-Add-your-own-ranking-algorithm).*
  input:
    method:
      type: mixed
      default: true
      required: false
      text: |
      Set to True for use object default method. Set the string name of the algorithm for use an specific one.
    options:
      type: array
      default: '[]'
      required: false
      text: *[Result options documentations]()*
  return: |
    Ordered array or multi-dimensionnal ordered array (if tie), populated by Candidate object.
  related:
    - 'Condorcet::getWinner'
    - 'Condorcet::getResult'
  examples:
    'Manual - Ranking from Condorcet Method': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-C.-Result-%23-2.-Simple-Ranking-from-Condorcet-Method%28s%29'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: getResultStats
  static: false
  description: |
    Get advanced computing data from used algorithm. Like Strongest paths for Schulze method.
  input:
    method:
      type: mixed
      default: true
      required: false
      text: |
      Set to True for use object default method. Set the string name of the algorithm for use an specific one.
  return: |
    Varying according to the algorithm used.
  related:
    - 'Condorcet::getResult'

  examples:
    'Advanced Result Management': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-C.-Result-%23-3.-Advanced-Results-Management'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: getVotesList
  static: false
  description: |
    Get registered vote list.
  input:
    tag:
      type: letype
      default: test
      required: true
    with:
      type: letype
      default: test
      required: true
  return: |
    *(array)* Populated by each Vote object.
  related:
    - 'Condorcet::countVotes'
  publish: true


  examples:
    Text de l'exemple: link
- 
  class: Condorcet
  type: method
  visibility: public
  name: getWinner
  static: false
  description: |
    Get the natural Condorcet winner if there is one. Alternatively you can get the winner(s) from an advanced Condorcet algorithm.
  input:
    method:
      type: mixed
      default: null
      required: false
      text: |
        *Only if not null :*

        The winner will be provided by an advanced algorithm of an available advanced Condorcet method. For most of them, it will be the same as the Condorcet Marquis there. But if it does not exist, it may be different; and in some cases they may be multiple.

        Set to True for use object default method. Set the string name of the algorithm for use an specific one.

        If null, Natural Condorcet algorithm will be use.
  return: |
    Candidate object given. Null if there are no available winner or loser.

    If you use an advanced method instead of Natural, you can get an array with multiples winners.

    Throw an exception on error.
  related:
    - 'Condorcet::getLoser'
    - 'Condorcet::getResult'

  examples:
    'Manual - Natural Condorcet': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-C.-Result-%23-1.-Natural-Condorcet'

  publish: true



- 
  class: Condorcet
  type: method
  visibility: public
  name: ignoreMaxVote
  static: false
  description: |
    Goes beyond the class static limit for this election object only, if static limitation enabled.
  input:
    ignore:
      type: bool
      default: true
      required: false
  return: |
    *(bool)* True if static limitation is ovveride for this election, false if it's not.
  related:
    - 'static Condorcet::setMaxVoteNumber'
    - 'static Condorcet::setMaxParseIteration'

  examples:
    '[Manual - Vote management]': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-B.-Vote-management-%23-1.-Add-Vote'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: jsonCandidates
  static: false
  description: |
    Import candidate from a Json source.
  input:
    input:
      type: string
      required: true
      text: Json string input.
  return: |
    *(array)* List of new registered candidate object. Count it for checking if all candidates have been correctly registered.
  related:
    - 'Condorcet::addCandidate'
    - 'Condorcet::parseCandidates'
    - 'Condorcet::jsonVotes'
  examples:
    - 'Manual - Manage Candidates': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-A.-Create-an-Election-%23-2.-Create-Candidates'

  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: jsonVotes
  static: false
  description: |
    Import votes from a Json source.
  input:
    input:
      type: string
      required: true
      text: Json string input.
  return: |
    *(array)* List of new registered vote object. Count it for checking if all votes have been correctly registered.
  related:
    - 'Condorcet::addVote'
    - 'Condorcet::parseVotes'
    - 'Condorcet::jsonCandidates'

  examples:
    - 'Manual - Add Vote': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-B.-Vote-management-%23-1.-Add-Vote'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: parseCandidates
  static: false
  description: |
    Import candidate from a text source.
  input:
    input:
      type: string
      required: true
      text: String or valid path to a text file.
  return: |
    *(array)* List of new registered candidate object. Count it for checking if all candidates have been correctly registered.
  related:
    - 'Condorcet::addCandidate'
    - 'Condorcet::jsonCandidates'
    - 'Condorcet::parseVotes'
  examples:
    - 'Manual - Manage Candidates': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-A.-Create-an-Election-%23-2.-Create-Candidates'

  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: parseVotes
  static: false
  description: |
    Import votes from a text source.
  input:
    input:
      type: string
      required: true
      text: String or valid path to a text file.
  return: |
    *(array)* List of new registered vote object. Count it for checking if all candidates have been correctly registered.
  related:
    - 'Condorcet::addVote'
    - 'Condorcet::parseCandidates'
    - 'Condorcet::jsonVotes'

  examples:
    - 'Manual - Add Vote': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-B.-Vote-management-%23-1.-Add-Vote'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: removeCandidate
  static: false
  description: |
    Remove Candidate from an election.   

    *Please note: You can't remove candidate after the first vote. Exception will be throw.*
  input:
    candidate:
      type: mixed
      required: true
      text: |
          * String matching Candidate Name    
          * Condorcet\Candidate object    
          * Array populated by Condorcet\Candidate    
          * Array populated by string matching Candidate name   
  return: |
    *(array)* List of removed Condorcet\Candidate object.
  related:
    - 'Condorcet::AddCandidate'
    - 'Condorcet::getCandidatesList'

  examples:
    'Manual - Manage Candidate': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-A.-Create-an-Election-%23-2.-Create-Candidates'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: removeVote
  static: false
  description: |
    Remove Vote from an election.   

    ```php
    $condorcet->removeVote('Charlie') ; // Remove vote(s) with tag Charlie
    $condorcet->removeVote('Charlie', false) ; // Remove votes without tag Charlie
    $condorcet->removeVote('Charlie, Julien', false) ; // Remove votes without tag Charlie AND without tag Julien.
    $condorcet->removeVote(array('Julien','Charlie')) ; // Remove votes with tag Charlie OR with tag Julien.
    $condorcet->removeVote($myVoteObject) ; // Remove a specific registered Vote.
    ```
  input:
    in:
      type: mixed
      required: true         
    with:
      type: mixed
      required: false
      default: true
  return: |
    *(array)* List of removed Condorcet\Vote object.
  related:
    - 'Condorcet::AddVote'
    - 'Condorcet::getVotesList'

  examples:
    'Manual - Vote management': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-B.-Vote-management-%23-2.-Manage-Vote'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: setMethod
  static: false
  description: |
    Change the default object method, except if method is forced by Class static configuration.
  input:
    method:
      type: string
      required: true
      text: Valid algorithm name.
  return: |
    *(string)* The new object default method.
  related:
    - 'Condorcet::getMethod'
    - 'static Condorcet::setClassMethod'
    - 'static Condorcet::forceMethod'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: addAlgos
  static: true
  description: |
    If you create your own Condorcet Algo. You will need it !
  input:
    algo:
      type: string
      required: true
      text: Algorithm Name
  return: |
    True on Success. False on echec.
  related:
    - 'static Condorcet::isAuthMethod'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: format
  static: true
  description: |
    Provide pretty re-formatting, human compliant, of all Condorcet PHP object or result set.
    Can be use for improve var_dump, or just to get more simple data output.
  input:
    input:
      type: mixed
      required: true
      text: All datatype. Like classical var_dump
    out:
      type: bool
      default: true
      required: false
      text: 'If true, will print the result on scrren. like var_dump() function. Else, just return it.'
    convertObject:
      type: bool
      default: true
      required: false
      text: If true. Will convert Candidate objects into string representation of their name.
  return: |
    New formatted data.
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: getAuthMethods
  static: true
  description: |
    Get a list of supported algorithm.
  input:
    basic:
      type: bool
      default: false
      required: false
      text: Include the natural Condorcet base algorithm.
  return: |
    *(array)* Populated by method string name. You can use it on getResult ... and others methods.
  related:
    - 'static Condorcet::isAuthMethod'
  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: getClassDefaultMethod
  static: true
  description: |
    Return the Condorcet static default method for the new Condorcet object.
  return: |
    *(string)* Method name.
  related:
    - 'static Condorcet::getAuthMethods'
    - 'static Condorcet::setClassMethod'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: getClassVersion
  static: true
  description: |
    la description
    est là
  input:
    type:
      type: string
      default: 'FULL'
      required: false
      text: |
        * 'MAJOR' will return : '0.90'
        * 'ENV' will return : 'DEV-0.91.0' or '0.92.51'
        * 'FULL' will return : '0.92.51'
  return: |
    *(string)* Condorcet PHP version.
  related:
    - 'Condorcet::getObjectVersion'
  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: isAuthMethod
  static: true
  description: |
    Test if a method is in the result set of Condorcet::getAuthMethods.
  input:
    method:
      type: string
      required: true
  return: |
    *(bool)* Yes or no.
  related:
    - 'static Condorcet::getAuthMethods'

  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: setClassMethod
  static: true
  description: |
    Put a new static method by default for the news Condorcet objects.
  input:
    method:
      type: string
      required: true
      text: Method Name.
    force:
      type: bool
      default: false
      required: false
      text: If true. Will force all Condorcet object ton use this default method.
  return: |
    False on error. Else, the name of the new default method.
  related:
    - 'static Condorcet::getClassDefaultMethod'
    - 'static Condorcet::forceMethod'

  publish: true

- 
  class: Condorcet
  type: method
  visibility: public
  name: setMaxParseIteration
  static: true
  description: |
    Maximum input for each use of Condorcet::parseCandidate && Condorcet::parseVote. Will throw an exception if exceeded.
  input:
    param1:
      type: mixed
      required: true
      text: 'Null will desactivate this functionnality. Else, enter an integer.'
  return: |
    False on error. Else, the new value (null or integer).
  related:
    - 'static Condorcet::setMaxVoteNumber'

  publish: true


- 
  class: Condorcet
  type: method
  visibility: public
  name: setMaxVoteNumber
  static: true
  description: |
    Add a limitation on Condorcet::addVote and related methods. You can't add new vote y the number of registered vote is equall ou superior of this limit.
  input:
    value:
      type: mixed
      required: true
      text: Null will desactivate this functionnality. An interger will fix the limit.
  return: |
    *(int or null)* The new limit.
  related:
    - 'static Condorcet::setMaxParseIteration'
  publish: true



# CLASS CANDIDATE


- 
  class: Candidate
  type: method
  visibility: public
  name: __construct
  static: false
  description: |
    Build a candidate.
  input:
    param1:
      type: string
      required: true
      text: Candidate Name
  return: |
    *(string)* The new candidate name.
  related:
    - 'Candidate::setName'
  examples:
    'Manual - Create Candidates': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-A.-Create-an-Election-%23-2.-Create-Candidates'
  publish: true


- 
  class: Candidate
  type: method
  visibility: public
  name: getCreateTimestamp
  static: false
  description: |
    Get the timestamp corresponding of the creation of this candidate.
  return: |
    *(float)* Timestamp
  related:
    - 'Candidate::getTimestamp'
  publish: true

- 
  class: Candidate
  type: method
  visibility: public
  name: getTimestamp
  static: false
  description: |
    Get the timestamp corresponding of the last namming change.
  return: |
    *(float)* Timestamp
  related:
    - 'Candidate::getCreateTimestamp'
  publish: true

- 
  class: Candidate
  type: method
  visibility: public
  name: getHistory
  static: false
  description: |
    Return an history of each namming change, with timestamp.
  return: |
    *(array)* An explicit multi-dimenssional array.
  related:
    - 'Candidate::getCreateTimestamp'
  publish: true

- 
  class: Candidate
  type: method
  visibility: public
  name: getName
  static: false
  description: |
    la description
    est là
  input:
    full:
      type: bool
      default: false
      required: false
      text: |
        If true, will return a multi-dimenssionnal array with additionnals infos like timestamps.    
        Else, just return the actual string name of this Candidate.
  return: |
    *(mixed)* Depending of "full" parameter.
  related:
    - 'Candidate::getHistory'
    - 'Candidate::setName'
  publish: true


- 
  class: Candidate
  type: method
  visibility: public
  name: setName
  static: false
  description: |
    Change the candidate name.   
    *If this will not cause conflicts if the candidate is already participating in elections and would namesake. This situation will throw an exception.*
  input:
    name:
      type: string
      required: true
      text: Candidate Name
  return: |
    *(string)* The new candidate name.
  publish: true



# CLASS VOTE


- 
  class: Vote
  type: method
  visibility: public
  name: __construct
  static: false
  description: |
    Build a vote object.
  input:
    ranking:
      type: mixed
      required: true
      text: Equivalent to Vote::setRanking method.
    tags:
      type: mixed
      default: null
      required: false
      text: Equivalent to Vote::addTags method.
    timestamp:
      type: numeric
      default: false
      required: false
      text: Set your own timestamp metadata on Ranking.
  return: |
    _None_
  related:
    - 'Vote::setRanking'
    - 'Vote::addTags'

  examples:
    'Manual - Add Vote': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-B.-Vote-management-%23-1.-Add-Vote'
  publish: true


- 
  class: Vote
  type: method
  visibility: public
  name: addTags
  static: false
  description: |
    Add tag(s) on this Vote.
  input:
    tags:
      type: mixed
      required: true
      text: Tag(s) are non-numeric alphanumeric string. They can be added by string separated by commas or an array.
  return: |
    Return Vote::getTags
  related:
    - 'Vote::removeTags'

  examples:
    'Manual - Add Vote': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-B.-Vote-management-%23-1.-Add-Vote'
  publish: true

- 
  class: Vote
  type: method
  visibility: public
  name: removeTags
  static: false
  description: |
    Remove registered tag(s) on this Vote.
  input:
    tags:
      type: mixed
      required: true
      text: They can be added by string separated by commas or an array.
  return: |
    *(array)* List of deleted tags.
  related:
    - 'Vote::addTags'

  examples:
    'Manual - Add Vote': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-B.-Vote-management-%23-1.-Add-Vote'
  publish: true

- 
  class: Vote
  type: method
  visibility: public
  name: countRankingCandidates
  static: false
  description: |
    Count the number of candidate provide into the active Ranking set.
  return: |
    *(int)* Number of Candidate into ranking.
  publish: true

- 
  class: Vote
  type: method
  visibility: public
  name: getAllCandidates
  static: false
  description: |
    Get all the candidates object set in the last ranking of this Vote.
  return: |
    *(array)* Candidates list.
  related:
    - 'Vote::getRanking'
    - 'Vote::countRankingCandidates'
  publish: true

- 
  class: Vote
  type: method
  visibility: public
  name: getContextualVote
  static: false
  description: |
    Return the vote actual ranking complete for the contexte of the provide election. Election must be linked to the Vote object.
  input:
    election:
      type: Condorcet\Condorcet
      required: true
      text: An election is already linked to Vote.
    stringMode:
      type: bool
      default: false
      required: false
      text: If true. Will return string name instead of Candidate object.
  return: |
    *(array)* Contextual full ranking.
  related:
    - 'Vote::getRanking'
  publish: true

- 
  class: Vote
  type: method
  visibility: public
  name: getCreateTimestamp
  static: false
  description: |
    Get the timestamp corresponding of the creation of this vote.
  return: |
    *(float)* Timestamp
  related:
    - 'Candidate::getTimestamp'
  publish: true

- 
  class: Vote
  type: method
  visibility: public
  name: getTimestamp
  static: false
  description: |
    Get the timestamp corresponding of the last vote change.
  return: |
    *(float)* Timestamp
  related:
    - 'Vote::getCreateTimestamp'
  publish: true

- 
  class: Vote
  type: method
  visibility: public
  name: getHistory
  static: false
  description: |
    Return an history of each vote change, with timestamp.
  return: |
    *(array)* An explicit multi-dimenssional array.
  related:
    - 'Vote::getCreateTimestamp'
  publish: true

- 
  class: Vote
  type: method
  visibility: public
  name: getRanking
  static: false
  description: |
    Get the actual Ranking of this Vote.
  return: |
    *(array)* Multidimenssionnal array populated by Candidate object.
  related:
    - 'Vote::setRanking'
  publish: true

- 
  class: Vote
  type: method
  visibility: public
  name: getTags
  static: false
  description: |
    Get the registered tags for this Vote.
  return: |
    *(array)* List of registered tag.
  related:
    - 'Vote::addTags'
    - 'Vote::removeTags'

  publish: true


- 
  class: Vote
  type: method
  visibility: public
  name: setRanking
  static: false
  description: |
    Set a new ranking for this vote.    

    Note that if your vote is already linked to one ore more elections, your ranking must be compliant with all of them, else an exception is throw. For do this, you need to use only valid Candidate object, you can't register a new ranking from string if your vote is already linked to an election.
  input:
    ranking:
      type: mixed
      required: true
      text: |
        * Ranking can be add by string like "A > B = C > D" (by candidate string name)
        * Multidimensionnal array like :
           ```php
           array( $candidate1, [$candidate2,$candidate4], $candidate 3 )
           ```
        * Multidimensionnal array with string :
           ```php
           array( 'candidate1Name', ['candidate2Name','candidate4Name'], 'candidate3Name' )
           ```
        * Or combine the 2 last ways.     

        Note: You can't use string candidate name if your vote is already linked to an election (by Condorcet::addVote).

    timestamp:
      type: numeric
      default: false
      required: false
      text: 'Set your own timestamp metadata on Ranking. Your timestamp must be > than last registered timestamp. Else, an exception will be throw.'
  return: |
    Vote::getRanking
  related:
    - 'Vote::getRanking'
    - 'Vote::getHistory'
    - 'Vote::__construct'

  examples:
    'Manual - Add a vote': 'https://github.com/julien-boudry/Condorcet/wiki/II-%23-B.-Vote-management-%23-1.-Add-Vote'

  publish: true
